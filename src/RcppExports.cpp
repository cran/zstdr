// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// zstdCompressImpl
SEXP zstdCompressImpl(Rcpp::RObject data, int level);
RcppExport SEXP zstdr_zstdCompressImpl(SEXP dataSEXP, SEXP levelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type level(levelSEXP);
    rcpp_result_gen = Rcpp::wrap(zstdCompressImpl(data, level));
    return rcpp_result_gen;
END_RCPP
}
// zstdDecompressImpl
SEXP zstdDecompressImpl(Rcpp::RObject data);
RcppExport SEXP zstdr_zstdDecompressImpl(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(zstdDecompressImpl(data));
    return rcpp_result_gen;
END_RCPP
}
// zstdMaxCLevelImpl
SEXP zstdMaxCLevelImpl();
RcppExport SEXP zstdr_zstdMaxCLevelImpl() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(zstdMaxCLevelImpl());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"zstdr_zstdCompressImpl", (DL_FUNC) &zstdr_zstdCompressImpl, 2},
    {"zstdr_zstdDecompressImpl", (DL_FUNC) &zstdr_zstdDecompressImpl, 1},
    {"zstdr_zstdMaxCLevelImpl", (DL_FUNC) &zstdr_zstdMaxCLevelImpl, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_zstdr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
